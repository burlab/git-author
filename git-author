#!/bin/bash

setup_env() {
	git_author_file_name=${HOME}/.git-author-template
	# Make sure the template file exists
	touch "${git_author_file_name}"
}

print_story_num() {
	if [ "$(git config git-author.includeBlankStoryNum)" = 'true' \
	     -o -n "${STORY_NUM}" ]; then
		<<<"${STORY_NUM}" read story_num story_comment
		echo "[${story_num}]"
		echo "# ${story_comment}"
		echo ""
	fi
}

insert_author_tags() {
	local number_of_authors="${1}"
	if [ "$number_of_authors" -eq 1 ]; then
		sed "s/.*/Authored-by: &/"
	else
		sed "s/.*/Co-authored-by: &/"
	fi
}

git-together-dependency() {
	git-together $@
}

git-author-main() {
	local first_author="${1}"

	setup_env

	if [ -z "${GIT_AUTHOR_LOCAL}" ]; then
		GIT_TOGETHER_OPTION='--global'
	fi

	if [ -n "${first_author}" ]; then
		(
			echo ""
			echo ""
			print_story_num
			# always clean-up the git-together.active settings
			git-together-dependency with --clear 2>/dev/null || true
			git-together-dependency with ${GIT_TOGETHER_OPTION} "$@" | insert_author_tags $#
		) > "${git_author_file_name}"
	fi

	# echo the script, but do not print blank lines because it's clutter on the terminal
	<"${git_author_file_name}" awk '!/^$/{print}'
}

if [ "${BASH_SOURCE}" = "${0}" ]; then
	git-author-main $@
fi
